name: Release Build

on:
  release:
    types: [published]
  workflow_dispatch:
    inputs:
      create_release:
        description: 'Create a new release?'
        required: false
        default: false
        type: boolean

jobs:
  release-build:
    name: Build Release APK
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Cache Gradle packages
        uses: actions/cache@v4
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Get version info
        id: version
        run: |
          VERSION_NAME=$(grep -o 'versionName "[^"]*' app/build.gradle | sed 's/versionName "//')
          VERSION_CODE=$(grep -o 'versionCode [0-9]*' app/build.gradle | sed 's/versionCode //')
          echo "version_name=$VERSION_NAME" >> $GITHUB_OUTPUT
          echo "version_code=$VERSION_CODE" >> $GITHUB_OUTPUT

      - name: Create keystore (if secrets available)
        if: ${{ env.KEYSTORE_BASE64 != '' }}
        env:
          KEYSTORE_BASE64: ${{ secrets.KEYSTORE_BASE64 }}
        run: |
          echo $KEYSTORE_BASE64 | base64 -d > app/keystore.jks

      - name: Build signed release APK
        if: ${{ env.KEYSTORE_BASE64 != '' }}
        env:
          KEYSTORE_BASE64: ${{ secrets.KEYSTORE_BASE64 }}
          KEYSTORE_PASSWORD: ${{ secrets.KEYSTORE_PASSWORD }}
          KEY_ALIAS: ${{ secrets.KEY_ALIAS }}
          KEY_PASSWORD: ${{ secrets.KEY_PASSWORD }}
        run: |
          ./gradlew assembleRelease \
            -Pandroid.injected.signing.store.file=app/keystore.jks \
            -Pandroid.injected.signing.store.password=$KEYSTORE_PASSWORD \
            -Pandroid.injected.signing.key.alias=$KEY_ALIAS \
            -Pandroid.injected.signing.key.password=$KEY_PASSWORD

      - name: Build unsigned release APK (fallback)
        if: ${{ env.KEYSTORE_BASE64 == '' }}
        env:
          KEYSTORE_BASE64: ${{ secrets.KEYSTORE_BASE64 }}
        run: ./gradlew assembleRelease

      - name: Rename release APK
        run: |
          if [ -f app/build/outputs/apk/release/app-release.apk ]; then
            mv app/build/outputs/apk/release/app-release.apk SpadeAce-v${{ steps.version.outputs.version_name }}-release.apk
          elif [ -f app/build/outputs/apk/release/app-release-unsigned.apk ]; then
            mv app/build/outputs/apk/release/app-release-unsigned.apk SpadeAce-v${{ steps.version.outputs.version_name }}-release-unsigned.apk
          fi

      - name: Generate checksums
        run: |
          for file in *.apk; do
            if [ -f "$file" ]; then
              sha256sum "$file" > "${file}.sha256"
              md5sum "$file" > "${file}.md5"
            fi
          done

      - name: Upload release APK to GitHub Release
        if: github.event_name == 'release'
        uses: softprops/action-gh-release@v1
        with:
          files: |
            *.apk
            *.sha256
            *.md5
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload release APK as artifact
        uses: actions/upload-artifact@v4
        with:
          name: SpadeAce-Release-v${{ steps.version.outputs.version_name }}
          path: |
            *.apk
            *.sha256
            *.md5
          retention-days: 90

  security-scan:
    name: Security Scan
    runs-on: ubuntu-latest
    needs: release-build
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Cache Gradle packages
        uses: actions/cache@v4
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Run dependency vulnerability check
        run: ./gradlew dependencyCheckAnalyze || true

      - name: Upload security scan results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: security-scan-results
          path: app/build/reports/dependency-check-report.html
          retention-days: 30