name: PR Validation

on:
  pull_request:
    branches: [ main, develop ]
  workflow_dispatch:

jobs:
  validate:
    name: Quick Build & Test
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Cache Gradle packages
        uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Validate Gradle wrapper
        uses: gradle/wrapper-validation-action@v1

      - name: Compile debug build (no APK generation)
        run: ./gradlew compileDebugKotlin

      - name: Run unit tests
        run: ./gradlew testDebugUnitTest --continue

      - name: Run lint check
        run: ./gradlew lintDebug --continue

      - name: Check code formatting
        run: ./gradlew ktlintCheck || echo "Kotlin linting not configured"

      - name: Analyze with detekt (if configured)
        run: ./gradlew detekt || echo "Detekt not configured"

      - name: Upload test results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: pr-validation-results
          path: |
            app/build/test-results/
            app/build/reports/
          retention-days: 7

      - name: Comment PR with build status
        if: github.event_name == 'pull_request'
        uses: actions/github-script@v7
        with:
          script: |
            const { context } = require('@actions/github');
            const buildStatus = '${{ job.status }}';
            const runUrl = `${context.payload.repository.html_url}/actions/runs/${context.runId}`;
            
            const comment = buildStatus === 'success' 
              ? `✅ **Build validation passed!**\n\n[View details](${runUrl})`
              : `❌ **Build validation failed!**\n\n[View details](${runUrl})`;
            
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: comment
            });