name: Build APK

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]
  workflow_dispatch:
    inputs:
      build_type:
        description: 'Build type'
        required: false
        default: 'both'
        type: choice
        options:
          - debug
          - release
          - both

jobs:
  build:
    name: Build APK
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Cache Gradle packages
        uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Clean project
        run: ./gradlew clean

      - name: Build debug APK
        if: ${{ github.event.inputs.build_type == 'debug' || github.event.inputs.build_type == 'both' || github.event.inputs.build_type == '' }}
        run: ./gradlew assembleDebug

      - name: Build release APK
        if: ${{ github.event.inputs.build_type == 'release' || github.event.inputs.build_type == 'both' || github.event.inputs.build_type == '' }}
        run: ./gradlew assembleRelease

      - name: Get version info
        id: version
        run: |
          VERSION_NAME=$(grep -o 'versionName "[^"]*' app/build.gradle | sed 's/versionName "//')
          VERSION_CODE=$(grep -o 'versionCode [0-9]*' app/build.gradle | sed 's/versionCode //')
          echo "version_name=$VERSION_NAME" >> $GITHUB_OUTPUT
          echo "version_code=$VERSION_CODE" >> $GITHUB_OUTPUT

      - name: Rename APK files
        run: |
          if [ -f app/build/outputs/apk/debug/app-debug.apk ]; then
            mv app/build/outputs/apk/debug/app-debug.apk app/build/outputs/apk/debug/SpadeAce-${{ steps.version.outputs.version_name }}-debug.apk
          fi
          if [ -f app/build/outputs/apk/release/app-release.apk ]; then
            mv app/build/outputs/apk/release/app-release.apk app/build/outputs/apk/release/SpadeAce-${{ steps.version.outputs.version_name }}-release.apk
          fi

      - name: Upload debug APK
        if: ${{ always() && hashFiles('app/build/outputs/apk/debug/*.apk') != '' }}
        uses: actions/upload-artifact@v4
        with:
          name: SpadeAce-Debug-APK
          path: app/build/outputs/apk/debug/*.apk
          retention-days: 30

      - name: Upload release APK
        if: ${{ always() && hashFiles('app/build/outputs/apk/release/*.apk') != '' }}
        uses: actions/upload-artifact@v4
        with:
          name: SpadeAce-Release-APK
          path: app/build/outputs/apk/release/*.apk
          retention-days: 30

      - name: Upload build reports
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: build-reports
          path: app/build/reports/
          retention-days: 7

  test:
    name: Run Tests
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Cache Gradle packages
        uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Run unit tests
        run: ./gradlew testDebugUnitTest

      - name: Upload test results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: test-results
          path: app/build/test-results/
          retention-days: 7

  lint:
    name: Run Lint
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Cache Gradle packages
        uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Run lint
        run: ./gradlew lintDebug

      - name: Upload lint results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: lint-results
          path: app/build/reports/lint-results-debug.html
          retention-days: 7